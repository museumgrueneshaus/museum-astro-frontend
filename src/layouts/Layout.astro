---
export interface Props {
  title: string;
  theme?: string;
  idleHome?: string; // optional: when idle, navigate to this path
  idleMs?: number;   // optional: idle timeout in ms (default 90000)
}

const { title, theme = 'dark', idleHome, idleMs = 90000 } = Astro.props;
---

<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Museum Digital Kiosk System" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="theme-color" content="#000000" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- Typography -->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap">
    
    <!-- PWA -->
    <link rel="manifest" href="/manifest.json" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  </head>
  <body data-theme={theme} data-idle-home={idleHome} data-idle-ms={idleHome ? String(idleMs) : undefined}>
    <slot />
    <script>
      // Global idle return-to-start: if body has data-idle-home, navigate there after inactivity
      (function(){
        const home = document.body.getAttribute('data-idle-home');
        if (!home) return;
        const msAttr = document.body.getAttribute('data-idle-ms');
        const timeoutMs = Math.max(10000, parseInt(msAttr || '90000', 10));
        let timer;
        
        const reset = () => {
          clearTimeout(timer);
          timer = setTimeout(() => {
            window.location.href = home;
          }, timeoutMs);
        };

        ['pointerdown','touchstart','mousedown','keydown','scroll'].forEach(ev => {
          document.addEventListener(ev, reset, { passive: true });
        });
        reset();
      })();
    </script>
  </body>
</html>

<style is:global>
  :root {
    /* Color System (MoMA-inspired Dark Theme) */
    --primary: #ffffff;      /* White for primary text and active elements */
    --primary-acc: #3b82f6;  /* A brighter blue for accents if needed */
    --text: #e5e5e5;         /* Light gray for body text (less stark than pure white) */
    --text-dim: #9ca3af;     /* Muted gray for captions and secondary info */
    --bg: #000000;           /* Pure black background */
    --bg-alt: #111111;       /* Slightly lighter black for surfaces */
    --border: #222222;       /* Dark gray for borders */
    
    /* Typography */
    --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    --font-display: 64px;
    --font-h1: 48px;
    --font-h2: 32px;
    --font-body: 22px;
    --font-caption: 18px;
    --leading: 1.5;
    --heading-tight: 1.1;

    /* Sizing & Rhythm (8px Grid) */
    --space-1: 0.5rem;  /* 8px */
    --space-2: 1rem;    /* 16px */
    --space-3: 1.5rem;  /* 24px */
    --space-4: 2rem;    /* 32px */
    --space-5: 2.5rem;  /* 40px */
    --space-6: 3rem;    /* 48px */
    --space-7: 3.5rem;  /* 56px */
    --space-8: 4rem;    /* 64px */

    /* Radius */
    --radius: 0px; /* Sharp, minimalist corners */
    
    /* Containers */
    --container: 1440px; /* Default max width for container utility */
  }

  /* Light theme override if ever needed */
  [data-theme="light"] {
    --primary: #000000;
    --text: #111111;
    --text-dim: #555555;
    --bg: #ffffff;
    --bg-alt: #f4f4f4;
    --border: #e5e5e5;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    font-family: var(--font-sans);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--text);
    overflow-x: hidden;
    line-height: var(--leading);
    font-size: clamp(18px, 1.5vw, 22px); /* Increased base font size for kiosk */
  }

  /* Prevent text selection on touch devices */
  body {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  /* Allow text selection in specific areas */
  .selectable {
    -webkit-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Focus styles for accessibility */
  :focus-visible {
    outline: 3px solid var(--primary-acc);
    outline-offset: 3px;
  }

  /* Honor the HTML hidden attribute across all components */
  [hidden] { display: none !important; }

  /* Loading animation */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .loading {
    display: inline-block;
    width: 48px;
    height: 48px;
    border: 4px solid var(--border);
    border-radius: 50%;
    border-top-color: var(--primary);
    animation: spin 1s linear infinite;
  }

  /* Utility classes */
  .container {
    max-width: var(--container);
    margin: 0 auto;
    padding: 0 var(--space-4);
  }
  
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Touch feedback */
  .touchable {
    transition: transform 0.1s ease-in-out;
  }

  .touchable:active {
    transform: scale(0.97);
  }

  /* Scrollbar styling */
  ::-webkit-scrollbar {
    width: 12px;
    height: 12px;
  }

  ::-webkit-scrollbar-track {
    background: var(--bg);
  }

  ::-webkit-scrollbar-thumb {
    background: var(--border);
    border-radius: 6px;
    border: 3px solid var(--bg);
  }
</style>
